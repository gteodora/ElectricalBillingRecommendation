// <auto-generated />
using System;
using ElectricalBillingRecommendation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ElectricalBillingRecommendation.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250530044746_AbleNullableThresholdInPricingTier")]
    partial class AbleNullableThresholdInPricingTier
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ElectricalBillingRecommendation.Models.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Discount")
                        .HasColumnType("double precision")
                        .HasColumnName("discount");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("plans");
                });

            modelBuilder.Entity("ElectricalBillingRecommendation.Models.PricingTier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PlanId")
                        .HasColumnType("integer")
                        .HasColumnName("plan_id");

                    b.Property<double>("PricePerKwh")
                        .HasColumnType("double precision")
                        .HasColumnName("price_per_kwh");

                    b.Property<int?>("Threshold")
                        .HasColumnType("integer")
                        .HasColumnName("threshold");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("pricing_tiers");
                });

            modelBuilder.Entity("ElectricalBillingRecommendation.Models.TaxGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("EcoTax")
                        .HasColumnType("double precision")
                        .HasColumnName("eco_tax");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<double>("Vat")
                        .HasColumnType("double precision")
                        .HasColumnName("vat");

                    b.HasKey("Id");

                    b.ToTable("tax_groups");
                });

            modelBuilder.Entity("ElectricalBillingRecommendation.Models.PricingTier", b =>
                {
                    b.HasOne("ElectricalBillingRecommendation.Models.Plan", "Plan")
                        .WithMany("PricingTiers")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("ElectricalBillingRecommendation.Models.Plan", b =>
                {
                    b.Navigation("PricingTiers");
                });
#pragma warning restore 612, 618
        }
    }
}
